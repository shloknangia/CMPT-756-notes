The default tolerance refers to the ability to detect and recover from faults in a system. Checkpointing is a method of recovery that can improve performance by avoiding the need to lock the system while a checkpoint is being written. However, checkpointing in a distributed system is complicated by the need to coordinate the checkpointing of multiple processes.

In order to take consistent checkpoints in a distributed system, processes must coordinate with each other to ensure that message passing does not result in inconsistent state. This can be done through uncoordinated checkpointing, where each process independently decides when to take a checkpoint, or coordinated checkpointing, where all processes agree to take a checkpoint at the same time. Communication-induced checkpointing is another way to avoid cascading rollbacks.

The article discusses two ways of doing checkpointing in a distributed system - blocking and non-blocking. Blocking checkpointing involves coordinating between processes and then taking a checkpoint, while non-blocking checkpointing involves taking checkpoints on each process and then considering the effect of messages sent between processes. The article argues that non-blocking checkpointing is more effective in preventing cascading rollbacks.